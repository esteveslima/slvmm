// Configuration to attach vscode debugger to sls offline server
// To vscode debugger attach to process running inside container, the node app must be started with --inspect:0.0.0.0:[port]
// The script "npm run offline:debug" wraps this logic and must be used to enable the debugger to be attached

{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Debug Serverless Offline",
            "type": "node",
            "request": "attach",            
            "protocol": "inspector",
            "processId": "${command:PickProcess}",
            "restart": true,
            "smartStep": true,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/.webpack/**/*.js"        // set distribution(webpack bundle) file path
            ],
            "remoteRoot": "/slvmm",            // set project remote root-path
            "address": "localhost",
            "port": 4000,                                    // sls offline plugin port
        }

    ]
}


// References:
// https://github.com/serverless-heaven/serverless-webpack/blob/master/README.md#vscode-debugging
// https://medium.com/@OneMuppet_/debugging-lambada-functions-locally-in-vscode-with-actual-break-points-deee6235f590
// https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_remote-debugging
// https://github.com/dherault/serverless-offline/issues/45
// https://github.com/serverless-heaven/serverless-webpack/issues/42
